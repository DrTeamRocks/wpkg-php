<?php namespace WPKG\Drivers\XML;

/**
 * Class ProfilesXML class with all basic parameters
 *
 * @link https://wpkg.org/Profiles.xml
 * @package WPKG\Classes\Profiles
 */
class Profiles
{
    /**
     * Current namespace
     * @var string
     */
    const ROOT = 'profiles:profiles';

    /**
     * List of attributes
     * @var array
     */
    const ROOT_ATTRIBUTES = [
        'xmlns:profiles' => 'http://www.wpkg.org/profiles',
        'xmlns:wpkg' => 'http://www.wpkg.org/wpkg',
        'xmlns:xsi' => 'http://www.w3.org/2001/XMLSchema-instance',
        'xsi:schemaLocation' => 'http://www.wpkg.org/profiles xsd/profiles.xsd'
    ];

    /**
     * XSD schema of XML
     * @var string
     */
    const XSD = __DIR__ . '/../../vendor/wpkg/wpkg-js/xsd/profiles.xsd';

    /**
     * Import XML into Hosts object
     *
     * @param   $array - Original array generated by XML
     * @return  \WPKG\Interfaces\Profiles
     */
    public function import(array $array): \WPKG\Interfaces\Profiles
    {
        $profiles = new \WPKG\Profiles();

        // Parse array items
        foreach ($array as $item) {
            $profile = new \WPKG\Profile();
            $attrs = $item['@attributes'];
            if (isset($attrs['id'])) $profile->with('id', $attrs['id']);

            if (isset($item['package'])) {
                if (count($item['package']) > 1) {
                    $packages = [];
                    foreach ($item['package'] as $package) {
                        $packages[] = $package['@attributes']['package-id'];
                    }
                } else {
                    $packages = $item['package']['@attributes']['package-id'];
                }
                $profile->with('packages', $packages);
            }

            if (isset($item['depends'])) {
                if (count($item['depends']) > 1) {
                    $depends = [];
                    foreach ($item['depends'] as $depend) {
                        $depends[] = $depend['@attributes']['profile-id'];
                    }
                    $profile->with('depends', $depends);
                } else {
                    $depends = $item['depends']['@attributes']['profile-id'];
                }
                $profile->with('depends', $depends);
            }

            $profiles->setProfile($profile);
        }

        return $profiles;
    }
}
